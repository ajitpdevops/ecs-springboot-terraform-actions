
name: CI Workflow

on:
  release:
    types:
      - created
  workflow_dispatch:

env:
  AWS_REGION: us-east-1              # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: coupon          # set this to your Amazon ECR repository name
  SERVICE_NAME: coupon          # set this to the name of the container in the

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      

    - name: Build, tag, and push image to Amazon ECR
      working-directory: ./src
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.ref_name }}
        ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_ENV

  deploy-stage:
    runs-on: ubuntu-latest
    needs: build-and-push
    defaults:
      run:
        working-directory: platformInfra
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.4.5   # Specify the desired Terraform version
        
      - name : print docker image name from previous job
        run: |
          echo ${{ env.image }}
          echo pwd
          
        
      - name: Terraform Init
        working-directory: ./platformInfra
        run: terraform init -backend-config="./env/platform-stage.config"
        
      - name: Terraform Apply
        env:
          IMAGE_TAG: ${{ github.ref }}
        working-directory: ./platformInfra
        run: terraform apply -auto-approve -var 'microservices={"${{ env.SERVICE_NAME }}"={ "image_tag"="${{ env.IMAGE_TAG }}" }}' -var-file="./env/stage.tfvars"

      - name: Terraform Destroy
        working-directory: ./platformInfra
        run: terraform destroy -auto-approve -var-file="./env/stage.tfvars"
        
